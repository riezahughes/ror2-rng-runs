[{"/home/dan/Work/ror2-rng-runs/webapp/src/index.js":"1","/home/dan/Work/ror2-rng-runs/webapp/src/App.js":"2","/home/dan/Work/ror2-rng-runs/webapp/src/reportWebVitals.js":"3","/home/dan/Work/ror2-rng-runs/webapp/src/characters/Portrait.js":"4","/home/dan/Work/ror2-rng-runs/webapp/src/characters/Portrait.test.js":"5","/home/dan/Work/ror2-rng-runs/webapp/src/artifacts/Portrait.js":"6","/home/dan/Work/ror2-rng-runs/webapp/src/tooltip/Tooltip.js":"7","/home/dan/Work/ror2-rng-runs/webapp/src/startButton/StartButton.js":"8"},{"size":500,"mtime":1610867875216,"results":"9","hashOfConfig":"10"},{"size":15528,"mtime":1610867991580,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1610619556114,"results":"12","hashOfConfig":"10"},{"size":874,"mtime":1610671316104,"results":"13","hashOfConfig":"10"},{"size":0,"mtime":1610623188311,"results":"14","hashOfConfig":"10"},{"size":867,"mtime":1610677734199,"results":"15","hashOfConfig":"10"},{"size":573,"mtime":1610859468299,"results":"16","hashOfConfig":"10"},{"size":188,"mtime":1610770673898,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"17ca585",{"filePath":"21","messages":"22","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/home/dan/Work/ror2-rng-runs/webapp/src/index.js",[],["39","40"],"/home/dan/Work/ror2-rng-runs/webapp/src/App.js",["41","42","43","44","45","46"],"import logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\n\nimport { useState, useEffect } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button'\nimport Slider from '@material-ui/core/Slider';\n\nimport CharacterPortrait from './characters/Portrait';\nimport ArtifactPortrait from './artifacts/Portrait';\nimport Tooltip from './tooltip/Tooltip';\nimport StartButton from './startButton/StartButton'\n\nimport CommandoPortrait from './characters/portraits/commando.png'\nimport HuntressPortrait from './characters/portraits/huntress.png'\nimport MultiPortrait from './characters/portraits/multi.png'\nimport EngineerPortrait from './characters/portraits/engineer.png'\nimport ArtificerPortrait from './characters/portraits/artificer.png'\nimport MercenaryPortrait from './characters/portraits/mercenary.png'\nimport RexPortrait from './characters/portraits/rex.png'\nimport LoaderPortrait from './characters/portraits/loader.png'\nimport AcridPortrait from './characters/portraits/acrid.png'\nimport CaptainPortrait from './characters/portraits/captain.png'\n\nimport ChaosPortrait from './artifacts/portraits/chaos.png'\nimport CommandPortrait from './artifacts/portraits/command.png'\nimport DeathPortrait from './artifacts/portraits/death.png'\nimport DissonancePortrait from './artifacts/portraits/dissonance.png'\nimport EnigmaPortrait from './artifacts/portraits/enigma.png'\nimport EvolutionPortrait from './artifacts/portraits/evolution.png'\nimport FrailtyPortrait from './artifacts/portraits/frailty.png'\nimport GlassPortrait from './artifacts/portraits/glass.png'\nimport HonorPortrait from './artifacts/portraits/honor.png'\nimport KinPortrait from './artifacts/portraits/kin.png'\nimport MetamorphosisPortrait from './artifacts/portraits/metamorphosis.png'\nimport SacrificePortrait from './artifacts/portraits/sacrifice.png'\nimport SoulPortrait from './artifacts/portraits/soul.png'\nimport SpitePortrait from './artifacts/portraits/spite.png'\nimport SwarmsPortrait from './artifacts/portraits/swarms.png'\nimport VengeancePortrait from './artifacts/portraits/vengeance.png'\n\nrequire('dotenv').config()\n\nconst App = () => {\n\n  // const [modalView, setModalView] = useState(false);\n\n  const [results, setResults] = useState(\"\");\n\n  const rngTime = () => {\n\n  var characterKeys = Object.keys(filteredCharacters);\n\n  const jsonCharacterArray = characterKeys.filter(function(key) {\n      return filteredCharacters[key]\n  });\n\n  var artifactKeys = Object.keys(filteredArtifacts);\n\n  const jsonArtifactArray = artifactKeys.filter(function(key) {\n      return filteredArtifacts[key]\n  });\n\n  console.log(jsonArtifactArray);\n\n  console.log(process.env.REACT_APP_API_URL);\n\n   axios.post(\n     `${process.env.REACT_APP_API_URL}/roll`, \n     {\n      action: \"roll\",\n      filters: {\n        artifactLimit: limits.artifactLimit,\n        characterLimit: limits.characterLimit,\n        artifacts: jsonArtifactArray,\n        characters: jsonCharacterArray\n      }\n     }\n   ).then((data) => {\n     let resultString;\n    if(data.data.status == \"success\"){\n\n      let artifactString = \"\";\n      let characterString = \"\";\n\n      for(let x = 0; x < data.data.results.artifacts.length; x++){\n        artifactString += `${data.data.results.artifacts[x].name}, `\n      }\n\n      for(let x = 0; x < data.data.results.characters.length; x++){\n        characterString += `${data.data.results.characters[x].name}, `\n      }      \n\n      resultString = `YOUR RUN: ${data.data.results.artifacts.length} artifacts (${artifactString}) using ${characterString}`;\n    }else{\n      resultString = \"Oops. Small Problem.\";\n    }\n      setResults(resultString);\n   });\n  }\n\n\n\n  const [limits, setLimits] = useState({\n    artifactLimit: 3,\n    characterLimit: 2\n  })\n\n  const [filteredCharacters, setFilteredCharacters] = useState(\n    {\n      commando: false,\n      huntress: false,\n      mult: false,\n      engineer: false,\n      artificer: false,\n      mercenary: false,\n      rex: false,\n      loader: false,\n      acrid: false,\n      captain: false\n    }\n  );\n  const [filteredArtifacts, setFilteredArtifacts] = useState(\n    {\n      chaos: false,\n      command: false,\n      death: false,\n      dissonance: false,\n      enigma: false,\n      evolution: false,\n      frailty: false,\n      glass: false,\n      honor: false,\n      kin: false,\n      metamorphosis: false,\n      sacrifice: false,\n      soul: false,\n      spite: false,\n      swarms: false,\n      vengeance: false,\n    }\n  );\n\n  const [tooltip, setTooltip] = useState({\n    title: null,\n    comment: null\n  })\n\n  const [tooltipPosition, setTooltipPosition] = useState({\n    mouseX: 0,\n    mouseY: 0,\n  })\n\n  const updateTooltipPosition = (e) => {\n    setTooltipPosition({\n      mouseX: e.clientX,\n      mouseY: e.clientY,\n    })\n  }\n\n  const showTooltip = (title, description) => {\n    setTooltip({\n      title: title,\n      description: description,\n      display: true\n    })\n  }\n\n  const hideTooltip = () => {\n    setTooltip({\n      title: null,\n      description: null,\n      display: false\n    })   \n  }\n\n  const changeCharacterFilter = (character) => {\n\n    const filterCopy = {...filteredCharacters};\n\n    filterCopy[character] = !filterCopy[character]\n\n    setFilteredCharacters(filterCopy);\n  }\n\n  const changeArtifactFilter = (artifact) => {\n    const filterCopy = {...filteredArtifacts};\n\n    filterCopy[artifact] = !filterCopy[artifact]\n\n    setFilteredArtifacts(filterCopy);\n  };\n\n\n  return (\n    <div>\n    <Tooltip\n    title={tooltip.title}\n    description={tooltip.description}\n    display={tooltip.display}\n    mouseX={tooltipPosition.mouseX}\n    mouseY={tooltipPosition.mouseY}\n  />\n    <div\n      className=\"mainContainer\"\n      onMouseMove={updateTooltipPosition}\n    >\n\n        {/* <h3>RNG Limits:</h3>\n        <Grid\n        container\n        spacing={0}\n        alignItems=\"center\"\n        justify=\"center\"\n        >\n          <Grid item xs={0}>\n            <div className=\"sliderContainer\">\n            <p>Number of Artifacts:</p>\n            <Slider\n              value={limits.artifactLimit}\n              valueLabelDisplay=\"auto\"\n              marks\n              step={1}\n              min={1}\n              max={16}\n              onChange={(_, value) =>\n                setLimits({\n                  characterLimit: limits.characterLimit,\n                  artifactLimit: value\n                })\n             }\n            />   \n            </div> \n          </Grid>\n\n          <Grid item xs={0}>\n          <div className=\"sliderContainer\">\n            <p>Number of Players:</p>\n            <Slider\n              value={limits.characterLimit}\n              valueLabelDisplay=\"auto\"\n              marks\n              step={1}\n              min={1}\n              max={4}\n              onChange={(_, value) =>\n                setLimits({\n                  characterLimit: value,\n                  artifactLimit: limits.artifactLimit\n                })\n             }          \n            />\n            </div>\n          </Grid>       \n        </Grid>         */}\n        <h3>Characters in Pool:</h3>\n        <Grid\n        container\n        spacing={0}\n        alignItems=\"center\"\n        justify=\"center\"\n        >\n          <Grid item xs={0}>\n            <CharacterPortrait name=\"commando\" image={CommandoPortrait} value=\"commando\" key={filteredCharacters.commando} filtered={filteredCharacters.commando} setFilter={changeCharacterFilter}/>\n          </Grid>\n          <Grid item xs={0}>\n            <CharacterPortrait name=\"huntress\" image={HuntressPortrait} value=\"huntress\" key={filteredCharacters.huntress} filtered={filteredCharacters.huntress} setFilter={changeCharacterFilter}/>\n          </Grid>\n          <Grid item xs={0}>\n            <CharacterPortrait name=\"mult\"  image={MultiPortrait} value=\"mult\" key={filteredCharacters.mult} filtered={filteredCharacters.mult} setFilter={changeCharacterFilter}/>\n          </Grid>\n          <Grid item xs={0}>\n            <CharacterPortrait name=\"engineer\" image={EngineerPortrait} value=\"engineer\" key={filteredCharacters.engineer} filtered={filteredCharacters.engineer} setFilter={changeCharacterFilter}/>\n          </Grid>\n          <Grid item xs={0}>\n            <CharacterPortrait name=\"artificer\" image={ArtificerPortrait} value=\"artificer\" key={filteredCharacters.artificer} filtered={filteredCharacters.artificer} setFilter={changeCharacterFilter}/>\n          </Grid>\n          <Grid item xs={0}>\n            <CharacterPortrait name=\"mercenary\" image={MercenaryPortrait} value=\"mercenary\" key={filteredCharacters.mercenary} filtered={filteredCharacters.mercenary} setFilter={changeCharacterFilter}/>\n          </Grid>\n          <Grid item xs={0}>\n            <CharacterPortrait name=\"rex\" image={RexPortrait} value=\"rex\" key={filteredCharacters.rex} filtered={filteredCharacters.rex} setFilter={changeCharacterFilter}/>\n          </Grid>\n          <Grid item xs={0}>\n            <CharacterPortrait name=\"loader\"  image={LoaderPortrait} value=\"loader\" key={filteredCharacters.loader} filtered={filteredCharacters.loader} setFilter={changeCharacterFilter}/>\n          </Grid>\n          <Grid item xs={0}>\n            <CharacterPortrait name=\"acrid\" image={AcridPortrait} value=\"acrid\" key={filteredCharacters.acrid} filtered={filteredCharacters.acrid} setFilter={changeCharacterFilter}/>\n          </Grid>\n          <Grid item xs={0}>\n            <CharacterPortrait name=\"captain\" image={CaptainPortrait} value=\"captain\" key={filteredCharacters.captain} filtered={filteredCharacters.captain} setFilter={changeCharacterFilter}/>\n          </Grid>      \n      </Grid>\n      <h3>Artifacts in Pool:</h3>\n      <div className=\"artifactContainer\">\n        <Grid\n          container\n          spacing={1}\n          alignItems=\"center\"\n          justify=\"center\"\n          >\n            <Grid item xs={0}>\n              <ArtifactPortrait image={ChaosPortrait} value=\"chaos\" filtered={filteredArtifacts.chaos} setFilter={changeArtifactFilter} title=\"Artifact of Chaos\" description=\"Friendly fire is enabled for both survivors and monsters alike.\" mouseIn={showTooltip} mouseOut={hideTooltip}/>\n            </Grid>\n            <Grid item xs={0}>\n              <ArtifactPortrait image={CommandPortrait} value=\"command\" filtered={filteredArtifacts.command} setFilter={changeArtifactFilter} title=\"Artifact of Command\" description=\"Choose your items.\" mouseIn={showTooltip} mouseOut={hideTooltip}/>\n            </Grid>              \n            <Grid item xs={0}>\n              <ArtifactPortrait image={DeathPortrait} value=\"death\" filtered={filteredArtifacts.death} setFilter={changeArtifactFilter} title=\"Artifact of Death\" description=\"When one player dies, everyone died. Enable only if you want to truly put your teamwork and individual skill to the ultimate test,\" mouseIn={showTooltip} mouseOut={hideTooltip}/>\n            </Grid>              \n            <Grid item xs={0}>\n              <ArtifactPortrait image={DissonancePortrait} value=\"dissonance\" filtered={filteredArtifacts.dissonance} setFilter={changeArtifactFilter} title=\"Artifact of Dissonance\" description=\"Monsters can appear outside of their usual environments.\" mouseIn={showTooltip} mouseOut={hideTooltip}/>\n            </Grid>              \n            <Grid item xs={0}>\n              <ArtifactPortrait image={EnigmaPortrait} value=\"enigma\" filtered={filteredArtifacts.enigma} setFilter={changeArtifactFilter} title=\"Artifact of Enigma\" description=\"Spawn with a random equipment that changes every time it's activated.\" mouseIn={showTooltip} mouseOut={hideTooltip}/>\n            </Grid>              \n            <Grid item xs={0}>\n              <ArtifactPortrait image={EvolutionPortrait} value=\"evolution\" filtered={filteredArtifacts.evolution} setFilter={changeArtifactFilter} title=\"Artifact of Evolution\" description=\"Monsters gain items between stages.\" mouseIn={showTooltip} mouseOut={hideTooltip}/>\n            </Grid>              \n            <Grid item xs={0}>\n              <ArtifactPortrait image={FrailtyPortrait} value=\"frailty\" filtered={filteredArtifacts.frailty} setFilter={changeArtifactFilter} title=\"Artifact of Frailty\" description=\"Fall damage is doubled and lethal.\" mouseIn={showTooltip} mouseOut={hideTooltip}/>\n            </Grid>              \n            <Grid item xs={0}>\n              <ArtifactPortrait image={GlassPortrait} value=\"glass\" filtered={filteredArtifacts.glass} setFilter={changeArtifactFilter} title=\"Artifact of Glass\" description=\"Allies deal 500% damage, but have 10% health.\" mouseIn={showTooltip} mouseOut={hideTooltip}/>\n            </Grid>              \n            <Grid item xs={0}>\n              <ArtifactPortrait image={HonorPortrait} value=\"honor\" filtered={filteredArtifacts.honor} setFilter={changeArtifactFilter} title=\"Artifact of Honor\" description=\"Enemies can only spawn as elites.\" mouseIn={showTooltip} mouseOut={hideTooltip}/>\n            </Grid>              \n            <Grid item xs={0}>\n              <ArtifactPortrait image={KinPortrait} value=\"kin\" filtered={filteredArtifacts.kin} setFilter={changeArtifactFilter} title=\"Artifact of Kin\" description=\"Monsters will be of only one type per stage.\" mouseIn={showTooltip} mouseOut={hideTooltip}/>\n            </Grid>              \n            <Grid item xs={0}>\n              <ArtifactPortrait image={MetamorphosisPortrait} value=\"metamorphosis\" filtered={filteredArtifacts.metamorphosis} setFilter={changeArtifactFilter} title=\"Artifact of Metamorphosis\" description=\"Players always spawn as a random survivor.\" mouseIn={showTooltip} mouseOut={hideTooltip}/>\n            </Grid>              \n            <Grid item xs={0}>\n              <ArtifactPortrait image={SacrificePortrait} value=\"sacrifice\" filtered={filteredArtifacts.sacrifice} setFilter={changeArtifactFilter} title=\"Artifact of Sacrifice\" description=\"Monsters drop items on death, but Chests no longer spawn.\" mouseIn={showTooltip} mouseOut={hideTooltip}/>\n            </Grid>              \n            <Grid item xs={0}>\n              <ArtifactPortrait image={SoulPortrait} value=\"soul\" filtered={filteredArtifacts.soul} setFilter={changeArtifactFilter} title=\"Artifact of Soul\" description=\"Wisps emerge from defeated monsters\" mouseIn={showTooltip} mouseOut={hideTooltip}/>\n            </Grid>              \n            <Grid item xs={0}>\n              <ArtifactPortrait image={SpitePortrait} value=\"spite\" filtered={filteredArtifacts.spite} setFilter={changeArtifactFilter} title=\"Artifact of Spite\" description=\"Enemies drop multiple exploding bombs on death.\" mouseIn={showTooltip} mouseOut={hideTooltip}/>\n            </Grid>              \n            <Grid item xs={0}>\n              <ArtifactPortrait image={SwarmsPortrait} value=\"swarms\" filtered={filteredArtifacts.swarms} setFilter={changeArtifactFilter} title=\"Artifact of Swarms\" description=\"Monster spawns are doubled, but monster maximum health is halved.\" mouseIn={showTooltip} mouseOut={hideTooltip}/>\n            </Grid>              \n            <Grid item xs={0}>\n              <ArtifactPortrait image={VengeancePortrait} value=\"vengeance\" filtered={filteredArtifacts.vengeance} setFilter={changeArtifactFilter} title=\"Artifact of Vengeance\" description=\"Your relentless doppelganger will invade every 10 minutes.\" mouseIn={showTooltip} mouseOut={hideTooltip}/>\n            </Grid>\n        </Grid>\n      </div>\n      <StartButton onClick={rngTime}/>\n      <div id=\"results\">{results}</div>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","/home/dan/Work/ror2-rng-runs/webapp/src/reportWebVitals.js",[],"/home/dan/Work/ror2-rng-runs/webapp/src/characters/Portrait.js",["47","48"],"import './Portrait.css';\n\nconst CharacterPortrait = (props) => {\n    if(!props.filtered){\n        return(\n        <div className=\"characterPortraitContainer characterSelected\" onClick={(e) => {props.setFilter(props.value)}}>\n            <div className=\"characterPortraitInnerContainer\">\n                <img src={props.image}/>\n            </div>\n            <div className=\"characterPortraitSelect\">\n                <div className=\"characterPortraitSelectInner\">\n\n                </div>\n            </div>\n        </div>\n        )\n    }else{\n        return(\n            <div className=\"characterPortraitContainer\" onClick={(e) => {props.setFilter(props.value)}}>\n                <div className=\"characterPortraitInnerContainer\">\n                    <img src={props.image}/>\n                </div>\n            </div>\n            )\n    }\n}\n\nexport default CharacterPortrait;\n","/home/dan/Work/ror2-rng-runs/webapp/src/characters/Portrait.test.js",[],"/home/dan/Work/ror2-rng-runs/webapp/src/artifacts/Portrait.js",["49","50"],"import './Portrait.css';\n\nconst ArtifactPortrait = (props) => {\n    if(!props.filtered){\n        return(\n        <div\n        className=\"artifactPortraitContainer artifactSelected\"\n        onClick={(e) => {props.setFilter(props.value)}}\n        onMouseEnter={(e) => {props.mouseIn(props.title, props.description)}}\n        onMouseLeave={(e) => {props.mouseOut()}}\n        >\n            <img src={props.image}/>\n        </div>\n        )\n    }else{\n        return(\n            <div\n            className=\"artifactPortraitContainer\"\n            onClick={(e) => {props.setFilter(props.value)}}\n            onMouseEnter={(e) => {props.mouseIn(props.title, props.description)}}\n            onMouseLeave={(e) => {props.mouseOut()}}            \n            >\n                <img src={props.image}/>\n            </div>\n            )\n    }\n}\n\nexport default ArtifactPortrait;\n","/home/dan/Work/ror2-rng-runs/webapp/src/tooltip/Tooltip.js",[],"/home/dan/Work/ror2-rng-runs/webapp/src/startButton/StartButton.js",[],["51","52"],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":1,"column":8,"nodeType":"59","messageId":"60","endLine":1,"endColumn":12},{"ruleId":"57","severity":1,"message":"61","line":5,"column":20,"nodeType":"59","messageId":"60","endLine":5,"endColumn":29},{"ruleId":"57","severity":1,"message":"62","line":8,"column":8,"nodeType":"59","messageId":"60","endLine":8,"endColumn":14},{"ruleId":"57","severity":1,"message":"63","line":9,"column":8,"nodeType":"59","messageId":"60","endLine":9,"endColumn":14},{"ruleId":"64","severity":1,"message":"65","line":83,"column":25,"nodeType":"66","messageId":"67","endLine":83,"endColumn":27},{"ruleId":"57","severity":1,"message":"68","line":106,"column":18,"nodeType":"59","messageId":"60","endLine":106,"endColumn":27},{"ruleId":"69","severity":1,"message":"70","line":8,"column":17,"nodeType":"71","endLine":8,"endColumn":41},{"ruleId":"69","severity":1,"message":"70","line":21,"column":21,"nodeType":"71","endLine":21,"endColumn":45},{"ruleId":"69","severity":1,"message":"70","line":12,"column":13,"nodeType":"71","endLine":12,"endColumn":37},{"ruleId":"69","severity":1,"message":"70","line":23,"column":17,"nodeType":"71","endLine":23,"endColumn":41},{"ruleId":"53","replacedBy":"72"},{"ruleId":"55","replacedBy":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Button' is defined but never used.","'Slider' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setLimits' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["74"],["75"],"no-global-assign","no-unsafe-negation"]